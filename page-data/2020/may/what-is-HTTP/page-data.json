{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/may/what-is-HTTP/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"846c7b55-d64a-5727-98b1-b2cde736989b","excerpt":"What is it? Hyper Text Transfer Protocol Communication between web servers & clients Stateless Every request is independent. whether you visit. reload, it doesn…","html":"<h1>What is it?</h1>\n<ul>\n<li><strong>H</strong>yper <strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol</li>\n<li>Communication between web servers &#x26; clients</li>\n<li>\n<p>Stateless</p>\n<ul>\n<li>Every request is independent. whether you visit. reload, it doesn’t remember anything about previous session.</li>\n<li>You can utilize local storage, cookies, sessions etc. but HTTP at its core is stateless.</li>\n</ul>\n</li>\n<li>\n<p>HTTPS</p>\n<ul>\n<li>Hyper Text Transfer Protocol Secure</li>\n<li>Data encrypted</li>\n</ul>\n</li>\n</ul>\n<h3>HTTP METHODS</h3>\n<ol>\n<li><strong>GET</strong></li>\n<li>Retrieves data from the server.</li>\n<li>Loading a page, assets, json data, xml data and so on.</li>\n<li>Every time you visit a page, you’re making GET request to the server</li>\n<li><strong>POST</strong></li>\n<li>When you are posting data to the server, adding something to the server.</li>\n<li>When you submit a form, blog post</li>\n<li><strong>PUT</strong></li>\n<li>Update data already on the server</li>\n<li>Think blog post you want to edit.</li>\n<li><strong>DELETE</strong></li>\n<li>Deletes data from the server</li>\n</ol>\n<h3>HEADER &#x26; BODY</h3>\n<p>With each HTTP request and response, you have something called a header and a body.</p>\n<ol>\n<li><strong>BODY</strong></li>\n<li>The body with a response is the data that’s going to load on the page, whatever is being sent from the server.</li>\n<li>\n<p>When you make a request, you can also send a request body.</p>\n<ul>\n<li>When you submit a form, the form fields you are submitting is a part of the request body.</li>\n</ul>\n</li>\n<li><strong>HEADER</strong></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Accept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 257\nHost: google.com\nUser-Agent: HTTPie/0.9.3</code></pre></div>\n<ul>\n<li>\n<p>General header</p>\n<ul>\n<li>Request URL: URL you’re requesting</li>\n<li>Request Method: if it’s a GET request, POST request and so on</li>\n<li>Status code: Covered deeper</li>\n<li>Remote address: IP of the remote computer</li>\n<li>Referrer Policy: if you go to a page from another page, it might have some information</li>\n</ul>\n</li>\n<li>\n<p>Response header</p>\n<ul>\n<li>Server: if its apache, ngnix or something like that. A lot of times, it’s hidden just to prevent hackers from knowing what type of server the website uses.</li>\n<li>Set-Cookie: cookies from the server to the client.</li>\n<li>Content-Type: text/HTML, text/CSS, image/png, application/JSON, and so on.</li>\n<li>Content-Length</li>\n<li>Date</li>\n</ul>\n</li>\n<li>\n<p>Request header</p>\n<ul>\n<li>Cookies: If you have a cookie that was previously sent by the server and you need to send it back to the server, you’d do it in this field</li>\n<li>Accept-xxx: accept encoding, character set, language, etc</li>\n<li>Content-Type</li>\n<li>Content-Length</li>\n<li>Authorization: some kind of token, so that you can validate a user to access a protected router or protected page</li>\n<li>User-Agent: long string that has something to do with the software the user is using</li>\n<li>Referrer: info regarding the referring site</li>\n</ul>\n</li>\n</ul>\n<h3>HTTP STATUS CODES</h3>\n<p><strong>1xx: Informational</strong></p>\n<p>Request received /processing</p>\n<p><strong>2xx Success</strong></p>\n<p>Successfully Received, understood and accepted</p>\n<ul>\n<li>200 - OK</li>\n<li>201 - OK created</li>\n</ul>\n<p><strong>3xx Redirect</strong></p>\n<p>Further action must be taken / redirect</p>\n<ul>\n<li>301 - Moved to new URL</li>\n<li>304 - Not modified (Cached version)</li>\n</ul>\n<p><strong>4xx Client Error</strong></p>\n<p>Request does not have what it needs</p>\n<ul>\n<li>400 - Bad request</li>\n<li>401 - Unauthorized</li>\n<li>404 - Not found</li>\n</ul>\n<p><strong>5xx Server Error</strong></p>\n<p>Server failed to fulfill an apparent valid request</p>\n<ul>\n<li>500 - Internal server error</li>\n</ul>","frontmatter":{"title":"What is HTTP?","date":"May 15, 2020","description":"What is HTTP and how does it work?"}}},"pageContext":{"slug":"/2020/may/what-is-HTTP/","previous":{"fields":{"slug":"/2020/may/westagram-search/"},"frontmatter":{"title":"Westagram search functionality"}},"next":{"fields":{"slug":"/2020/may/database/"},"frontmatter":{"title":"Learning Database"}}}}}